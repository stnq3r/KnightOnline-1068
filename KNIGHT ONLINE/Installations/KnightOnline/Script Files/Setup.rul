
////////////////////////////////////////////////////////////////////////////////
//                                                                            
//  IIIIIII SSSSSS                                                            
//    II    SS                          InstallShield (R)                     
//    II    SSSSSS      (c) 1996-2000, InstallShield Software Corporation     
//    II        SS      (c) 1990-1996, InstallShield Corporation              
//  IIIIIII SSSSSS                     All Rights Reserved.                   
//                                                                            
//                                                                            
//  This code is generated as a starting setup template.  You should   
//  modify it to provide all necessary steps for your setup.
//                                                                            
//                                                                            
//    File Name:  Setup.rul                                                   
//                                                                            
//  Description:  InstallShield script                                        
//                                                                            
//     Comments:  This template script performs a basic setup. With minor           
//                modifications, this template can be adapted to create       
//                new, customized setups.
//
////////////////////////////////////////////////////////////////////////////////


// Include header files
    
#include "ifx.h" //DO NOT REMOVE
    
////////////////////// string defines ////////////////////////////

//////////////////// installation declarations ///////////////////

// ----- DLL function prototypes -----


    // your DLL function prototypes


// ---- script function prototypes -----


    // your script function prototypes

    // your global variables



//////////////////////////////////////////////////////////////////////////////
//                                                                           
//  FUNCTION:   OnFirstUIBefore                                            
//                                                                           
//  EVENT:      FirstUIBefore event is sent when installation is run for the first
//              time on given machine. In the handler installation usually displays
//              UI allowing end user to specify installation parameters. After this
//              function returns, ComponentTransferData is called to perform file
//              transfer.
//                                                                           
///////////////////////////////////////////////////////////////////////////////
function OnFirstUIBefore()
    NUMBER  nResult,nSetupType;
    STRING  szTitle, szMsg;
    STRING  szDir;
    STRING  szfolder;
begin	
    // TO DO: if you want to enable background, window title, and caption bar title                                                                     
    // SetTitle( @TITLE_MAIN, 24, WHITE );                                        
    // SetTitle( @TITLE_CAPTIONBAR, 0, BACKGROUNDCAPTION ); 	                   
    // Enable( FULLWINDOWMODE );						   
    // Enable( BACKGROUND );							  
    // SetColor(BACKGROUND,RGB (0, 128, 128));					   
   
    TARGETDIR = PROGRAMFILES ^@PRODUCT_NAME;	
    szDir = TARGETDIR;
    SHELL_OBJECT_FOLDER = @FOLDER_NAME;

Dlg_Start:
    // beginning of dialogs label

Dlg_SdWelcome:
    szTitle = "";
    szMsg   = "";
    nResult = SdWelcome( szTitle, szMsg );
    if (nResult = BACK) goto Dlg_Start;

Dlg_SdAskDestPath:
    szTitle = "";
    szMsg   = "";
    nResult = SdAskDestPath( szTitle, szMsg, szDir, 0 );
    TARGETDIR = szDir;
    if (nResult = BACK) goto Dlg_SdWelcome;

Dlg_ObjDialogs:
    nResult = ShowObjWizardPages(nResult);
    if (nResult = BACK) goto Dlg_SdAskDestPath;
    
Dlg_SdSelectFolder:
    szfolder = SHELL_OBJECT_FOLDER; 
    szTitle    = "";
    szMsg      = "";
    nResult    = SdSelectFolder( szTitle, szMsg, szfolder );
    SHELL_OBJECT_FOLDER = szfolder;
    if (nResult = BACK) goto Dlg_ObjDialogs;
   
    // setup default status
    SetStatusWindow(0, "");
    Enable(STATUSEX);
    StatusUpdate(ON, 100);

    return 0;
end;

///////////////////////////////////////////////////////////////////////////////
//
//  FUNCTION:   OnMaintUIBefore
//
//  EVENT:      MaintUIBefore event is sent when end user runs installation that
//              has already been installed on the machine. Usually this happens 
//              through Add/Remove Programs applet. In the handler installation 
//              usually displays UI allowing end user to modify existing installation
//              or uninstall application. After this function returns, 
//              ComponentTransferData is called to perform file transfer.
//
///////////////////////////////////////////////////////////////////////////////
function OnMaintUIBefore()
    STRING svResult,szCaption;
    NUMBER nResult;
begin
	   // TO DO:   if you want to enable background, window title, and caption bar title   								
	   // SetTitle( @TITLE_MAIN, 24, WHITE );					
	   // SetTitle( @TITLE_CAPTIONBAR, 0, BACKGROUNDCAPTION );  
	   // SetColor(BACKGROUND,RGB (0, 128, 128));					
	   // Enable( FULLWINDOWMODE );						
	   // Enable( BACKGROUND );							
	
    //Maintenance Mode
    svResult = SdLoadString(IFX_MAINTUI_MSG);
    szCaption = SdLoadString(IFX_ONMAINTUI_CAPTION);
	   nResult = SprintfBox(MB_OKCANCEL,szCaption,"%s",svResult);
	   if (nResult = IDCANCEL) then
	       exit;
	   elseif(nResult = IDOK) then
	       // setup default status
        SetStatusWindow(0, "");
        Enable(STATUSEX);
        StatusUpdate(ON, 100);

	       //-->Remove all components
	       ComponentRemoveAll();
    endif;
    return 0;
end;

///////////////////////////////////////////////////////////////////////////////
//
//  FUNCTION:   OnMoving
//
//  EVENT:      Moving event is sent when file transfer is started as a result of
//              ComponentTransferData call, before any file transfer operations 
//              are performed.
//
///////////////////////////////////////////////////////////////////////////////
function OnMoving()
    STRING szAppPath;
begin
    // Set LOGO Compliance Application Path 
    // TO DO : if your application .exe is in a subfolder of TARGETDIR then add subfolder 
    szAppPath = TARGETDIR;
    RegDBSetItem(REGDB_APPPATH, szAppPath);
    RegDBSetItem(REGDB_APPPATH_DEFAULT, szAppPath ^ @PRODUCT_KEY);
end;

// --- include script file section ---
///////////////////////////////////////////////////////////////////////////////
//
//  FUNCTION:   OnFirstUIAfter
//
//
///////////////////////////////////////////////////////////////////////////////
function OnFirstUIAfter()
    NUMBER nResult;
	STRING szProgramFolder, szItemName, szCommandLine, szProgram;
	STRING szWorkingDir, szIconPath, szShortCutKey;
	NUMBER nIcon, nFlag;
	NUMBER nRootKey;
	STRING szClass, szKey, szName, szValue;
begin
    LongPathToShortPath(TARGETDIR);

	//Exe file
    szItemName = "Knight OnLine";
    szCommandLine = TARGETDIR ^ "Launcher.exe";
    szWorkingDir = TARGETDIR;
    szIconPath = TARGETDIR ^ "Launcher.exe";
    szShortCutKey = "";
    nIcon = 0;
    nFlag = REPLACE;
    
    if (AddFolderIcon (FOLDER_DESKTOP, szItemName, szCommandLine,
        szWorkingDir, szIconPath, nIcon, szShortCutKey, nFlag) < 0) then
       MessageBox("AddFolderIcon failed.", SEVERE);
    endif;
    
    if (AddFolderIcon (SHELL_OBJECT_FOLDER, szItemName, szCommandLine,
        szWorkingDir, szIconPath, nIcon, szShortCutKey, nFlag) < 0) then
       MessageBox("AddFolderIcon failed.", SEVERE);
    endif;

    szItemName = "Option";
    szCommandLine = TARGETDIR ^ "Option.exe";
    szWorkingDir = TARGETDIR;
    szIconPath = TARGETDIR ^ "Option.exe";
    szShortCutKey = "";
    nIcon = 0;
    nFlag = REPLACE;
    
    if (AddFolderIcon (SHELL_OBJECT_FOLDER, szItemName, szCommandLine,
        szWorkingDir, szIconPath, nIcon, szShortCutKey, nFlag) < 0) then
       MessageBox("AddFolderIcon failed.", SEVERE);
    endif;

    szItemName = "KscViewer";
    szCommandLine = TARGETDIR ^ "KscViewer.exe";
    szWorkingDir = TARGETDIR;
    szIconPath = TARGETDIR ^ "KscViewer.exe";
    szShortCutKey = "";
    nIcon = 0;
    nFlag = REPLACE;
    
    if (AddFolderIcon (SHELL_OBJECT_FOLDER, szItemName, szCommandLine,
        szWorkingDir, szIconPath, nIcon, szShortCutKey, nFlag) < 0) then
       MessageBox("AddFolderIcon failed.", SEVERE);
    endif;
    
    //Uninstall                                       
    szCommandLine = UNINST;
    szCommandLine = szCommandLine + " -f" + UNINSTALL_STRING;
    AddFolderIcon(szProgramFolder, "UnInstall", szCommandLine,
        WINDIR, "", 0, "", REPLACE);
	
    
    // Registry
	nRootKey = HKEY_CURRENT_USER;
    if (RegDBSetDefaultRoot(nRootKey) < 0) then
        MessageBox("Root Key Error.", SEVERE);
        abort;
    endif;

    szKey = "\\SOFTWARE\\KnightOnLine";
    
    szClass  = "CompanyName";
    if(RegDBSetKeyValueEx(szKey, szClass, REGDB_STRING, "Copyright 2002 NoahSystem And WizGate", -1) < 0) then
        MessageBox("Ver Setting Error", WARNING);
    endif;
    
    szClass  = "VERSION";
    if(RegDBSetKeyValueEx(szKey, szClass, REGDB_NUMBER, "1068", -1) < 0) then
        MessageBox("Ver Setting Error", WARNING);
    endif;
    
    szClass  = "PATH";
    if(RegDBSetKeyValueEx(szKey, szClass, REGDB_STRING, TARGETDIR, -1) < 0) then
        MessageBox("Ver Setting Error", WARNING);
    endif;
    
    szClass  = "EXE";
    if(RegDBSetKeyValueEx(szKey, szClass, REGDB_STRING, "KnightOnLine.exe", -1) < 0) then
        MessageBox("Ver Setting Error", WARNING);
    endif;
    
    szClass  = "SERVICE";
    if(RegDBSetKeyValueEx(szKey, szClass, REGDB_STRING, "Knight OnLine", -1) < 0) then
        MessageBox("Ver Setting Error", WARNING);
    endif;
    
    /*
    szClass  = "Exec";
    if(RegDBSetKeyValueEx(szKey, szClass, REGDB_STRING, "DWait.exe", -1) < 0) then
        MessageBox("Ver Setting Error", WARNING);
    endif;
    
    szClass  = "HomaPage";
    if(RegDBSetKeyValueEx(szKey, szClass, REGDB_STRING, "www.OnlineWorms.com", -1) < 0) then
        MessageBox("Ver Setting Error", WARNING);
    endif;
    
    szClass  = "Name";
    if(RegDBSetKeyValueEx(szKey, szClass, REGDB_STRING, "OnlineWorms", -1) < 0) then
        MessageBox("Ver Setting Error", WARNING);
    endif;
    
    szClass  = "Path";
    if(RegDBSetKeyValueEx(szKey, szClass, REGDB_STRING, TARGETDIR, -1) < 0) then
        MessageBox("Ver Setting Error", WARNING);
    endif;
    
    szClass  = "Version";
    if(RegDBSetKeyValueEx(szKey, szClass, REGDB_NUMBER, "8", -1) < 0) then
        MessageBox("Ver Setting Error", WARNING);
    endif;*/
    
end;